{"ast":null,"code":"var _jsxFileName = \"/home/ali/Documents/Frontend-codes/reactJS/Projects/WeatherApp_ReactJS/src/App.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport CityInput from \"./component/CityInput\";\nimport ResultWeather from \"./component/ResultWeather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      location: \"\",\n      temp: \"\",\n      humidity: \"\",\n      describtion: \"\"\n    };\n  }\n\n  getWeather(e) {\n    e.preventDefault();\n    const api = axios(\"http://api.openweathermap.org/data/2.5/weather?q=tokyo&appid=e36ed364400282e43250b6c4c0274d44\").then(res => // res.data.name\n    // res.data.main.temp\n    // res.data.main.humidity\n    // res.data.weather[0].description\n    this.setState({\n      location: res.data.name,\n      temp: res.data.main.temp,\n      humidity: res.data.main.humidity,\n      describtion: res.data.weather[0].description\n    }));\n    console.log(\"this is: \" + api);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(CityInput, {\n        getWeather: this.getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResultWeather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ali/Documents/Frontend-codes/reactJS/Projects/WeatherApp_ReactJS/src/App.js"],"names":["axios","React","Component","CityInput","ResultWeather","App","constructor","state","location","temp","humidity","describtion","getWeather","e","preventDefault","api","then","res","setState","data","name","main","weather","description","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAuB,uBAAvB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AAEvBI,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,EADF;AAETC,MAAAA,IAAI,EAAG,EAFE;AAGTC,MAAAA,QAAQ,EAAG,EAHF;AAITC,MAAAA,WAAW,EAAG;AAJL,KAAb;AAMH;;AAEDC,EAAAA,UAAU,CAACC,CAAD,EAAG;AACTA,IAAAA,CAAC,CAACC,cAAF;AAGA,UAAMC,GAAG,GAAEf,KAAK,CAAC,+FAAD,CAAL,CACVgB,IADU,CAEPC,GAAG,IACH;AACA;AACA;AACA;AACA,SAAKC,QAAL,CAAc;AACVV,MAAAA,QAAQ,EAAOS,GAAG,CAACE,IAAJ,CAASC,IADd;AAEVX,MAAAA,IAAI,EAAWQ,GAAG,CAACE,IAAJ,CAASE,IAAT,CAAcZ,IAFnB;AAGVC,MAAAA,QAAQ,EAAOO,GAAG,CAACE,IAAJ,CAASE,IAAT,CAAcX,QAHnB;AAIVC,MAAAA,WAAW,EAAIM,GAAG,CAACE,IAAJ,CAASG,OAAT,CAAiB,CAAjB,EAAoBC;AAJzB,KAAd,CAPO,CAAX;AAgBAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAYV,GAAxB;AAGH;;AAEDW,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,UAAU,EAAK,KAAKd;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA5CsB;;AA+C3B,eAAeP,GAAf","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport CityInput  from \"./component/CityInput\";\nimport ResultWeather from \"./component/ResultWeather\";\nclass App extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            location : \"\",\n            temp : \"\",\n            humidity : \"\",\n            describtion : \"\",\n        }\n    }\n\n    getWeather(e){\n        e.preventDefault()\n\n\n        const api =axios(\"http://api.openweathermap.org/data/2.5/weather?q=tokyo&appid=e36ed364400282e43250b6c4c0274d44\")\n        .then(\n            res => \n            // res.data.name\n            // res.data.main.temp\n            // res.data.main.humidity\n            // res.data.weather[0].description\n            this.setState({\n                location :     res.data.name,\n                temp :         res.data.main.temp,\n                humidity :     res.data.main.humidity,\n                describtion :  res.data.weather[0].description,\n            })\n            \n            )\n\n        console.log(\"this is: \"+api);\n\n\n    }\n\n    render(){\n        return(\n            <div className='container'>\n                <CityInput getWeather = { this.getWeather } />\n                <ResultWeather/>\n            </div>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}