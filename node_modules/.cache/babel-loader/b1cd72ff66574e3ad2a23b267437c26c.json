{"ast":null,"code":"var _jsxFileName = \"/home/ali/Documents/Frontend-codes/reactJS/Projects/WeatherApp_ReactJS/src/App.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport CityInput from \"./component/CityInput\";\nimport ResultWeather from \"./component/ResultWeather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      location: \"\",\n      temp: \"\",\n      humidity: \"\",\n      describtion: \"\"\n    };\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n  getWeather(e) {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n\n    if (city.trim().length !== 0) {\n      axios(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=e36ed364400282e43250b6c4c0274d44`).then(res => this.setState({\n        location: res.data.name,\n        temp: res.data.main.temp + \" °C\",\n        humidity: res.data.main.humidity + \"%\",\n        describtion: res.data.weather[0].description.toUpperCase()\n      }));\n    } else {\n      alert(\"Nope\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(CityInput, {\n        getWeather: this.getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResultWeather, {\n        location: this.state.location,\n        describtion: this.state.describtion,\n        temp: this.state.temp,\n        humidity: this.state.humidity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ali/Documents/Frontend-codes/reactJS/Projects/WeatherApp_ReactJS/src/App.js"],"names":["axios","React","Component","CityInput","ResultWeather","App","constructor","state","location","temp","humidity","describtion","getWeather","bind","e","preventDefault","city","target","elements","value","trim","length","then","res","setState","data","name","main","weather","description","toUpperCase","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAuB,uBAAvB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AAEvBI,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,EADF;AAETC,MAAAA,IAAI,EAAG,EAFE;AAGTC,MAAAA,QAAQ,EAAG,EAHF;AAITC,MAAAA,WAAW,EAAG;AAJL,KAAb;AAMA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,UAAU,CAACE,CAAD,EAAG;AACTA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAApC;;AAEA,QAAIH,IAAI,CAACI,IAAL,GAAYC,MAAZ,KAAsB,CAA1B,EAA8B;AAC1BrB,MAAAA,KAAK,CAAE,oDAAmDgB,IAAK,sDAA1D,CAAL,CACCM,IADD,CAEIC,GAAG,IACH,KAAKC,QAAL,CAAc;AACVhB,QAAAA,QAAQ,EAAOe,GAAG,CAACE,IAAJ,CAASC,IADd;AAEVjB,QAAAA,IAAI,EAAWc,GAAG,CAACE,IAAJ,CAASE,IAAT,CAAclB,IAAd,GAAqB,KAF1B;AAGVC,QAAAA,QAAQ,EAAOa,GAAG,CAACE,IAAJ,CAASE,IAAT,CAAcjB,QAAd,GAAyB,GAH9B;AAIVC,QAAAA,WAAW,EAAKY,GAAG,CAACE,IAAJ,CAASG,OAAT,CAAiB,CAAjB,EAAoBC,WAArB,CAAkCC,WAAlC;AAJL,OAAd,CAHJ;AAYH,KAbD,MAaK;AACDC,MAAAA,KAAK,CAAC,MAAD,CAAL;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,UAAU,EAAK,KAAKpB;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,aAAD;AACA,QAAA,QAAQ,EAAQ,KAAKL,KAAL,CAAWC,QAD3B;AAEA,QAAA,WAAW,EAAK,KAAKD,KAAL,CAAWI,WAF3B;AAGA,QAAA,IAAI,EAAY,KAAKJ,KAAL,CAAWE,IAH3B;AAIA,QAAA,QAAQ,EAAQ,KAAKF,KAAL,CAAWG;AAJ3B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAjDsB;;AAoD3B,eAAeL,GAAf","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport CityInput  from \"./component/CityInput\";\nimport ResultWeather from \"./component/ResultWeather\";\nclass App extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            location : \"\",\n            temp : \"\",\n            humidity : \"\",\n            describtion : \"\",\n        }\n        this.getWeather = this.getWeather.bind(this)\n    }\n\n    getWeather(e){\n        e.preventDefault()\n        const city = e.target.elements.city.value\n\n        if (city.trim().length !==0 ) {\n            axios(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=e36ed364400282e43250b6c4c0274d44`)\n            .then(\n                res => \n                this.setState({\n                    location :     res.data.name ,\n                    temp :         res.data.main.temp + \" °C\",\n                    humidity :     res.data.main.humidity + \"%\",\n                    describtion :  (res.data.weather[0].description).toUpperCase(),\n                })\n                \n                \n            )\n        }else{\n            alert(\"Nope\")\n        }\n    }\n\n    render(){\n                    \n        return(\n            <div className='container'>\n                <CityInput getWeather = { this.getWeather } />\n            \n                <ResultWeather \n                location     = {this.state.location} \n                describtion  = {this.state.describtion} \n                temp         = {this.state.temp} \n                humidity     = {this.state.humidity} \n                />\n            </div>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}