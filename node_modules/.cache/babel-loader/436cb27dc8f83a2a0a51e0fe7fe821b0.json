{"ast":null,"code":"var _jsxFileName = \"/home/ali/Documents/Frontend-codes/reactJS/Projects/new_TODOLIST/src/App.js\";\nimport React, { Component } from 'react';\nimport AddItems from \"./component/AddItems\";\nimport TodoItems from \"./component/TodoItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      info: [{\n        task: \"John\"\n      }, {\n        task: \"Adam\"\n      }, {\n        task: \"Noah\"\n      }]\n    };\n    this.adding = this.adding.bind(this);\n    this.adding = this.adding.bind(this);\n  }\n\n  map(matrix) {\n    return matrix.map((res, id) => /*#__PURE__*/_jsxDEV(TodoItems, {\n      id: id,\n      task: res.task\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 26\n    }, this));\n  }\n\n  removing(id) {\n    const {\n      info\n    } = this.state;\n    let myIndex = info.findIndex(item => item.id === id);\n    info.splice(myIndex, 1);\n    this.setState({\n      info\n    });\n  }\n\n  adding(item) {\n    item.id = Math.random();\n    const {\n      info\n    } = this.state;\n    info.push(item);\n    this.setState({\n      info\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddItems, {\n        adding: this.adding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.map(this.state.info)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ali/Documents/Frontend-codes/reactJS/Projects/new_TODOLIST/src/App.js"],"names":["React","Component","AddItems","TodoItems","App","constructor","state","info","task","adding","bind","map","matrix","res","id","removing","myIndex","findIndex","item","splice","setState","Math","random","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AAEvBI,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CACF;AAACC,QAAAA,IAAI,EAAE;AAAP,OADE,EAEF;AAACA,QAAAA,IAAI,EAAE;AAAP,OAFE,EAGF;AAACA,QAAAA,IAAI,EAAE;AAAP,OAHE;AADG,KAAb;AAOA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDC,EAAAA,GAAG,CAACC,MAAD,EAAQ;AACP,WACIA,MAAM,CAACD,GAAP,CACA,CAACE,GAAD,EAAMC,EAAN,kBAAa,QAAC,SAAD;AAEb,MAAA,EAAE,EAAQA,EAFG;AAGb,MAAA,IAAI,EAAMD,GAAG,CAACL;AAHD,OACHM,EADG;AAAA;AAAA;AAAA;AAAA,YADb,CADJ;AAQH;;AAEDC,EAAAA,QAAQ,CAACD,EAAD,EAAI;AACR,UAAM;AAACP,MAAAA;AAAD,QAAS,KAAKD,KAApB;AACA,QAAIU,OAAO,GAAGT,IAAI,CAACU,SAAL,CAAeC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAnC,CAAd;AACAP,IAAAA,IAAI,CAACY,MAAL,CAAYH,OAAZ,EAAoB,CAApB;AACA,SAAKI,QAAL,CAAc;AACVb,MAAAA;AADU,KAAd;AAGH;;AACDE,EAAAA,MAAM,CAACS,IAAD,EAAM;AACRA,IAAAA,IAAI,CAACJ,EAAL,GAAUO,IAAI,CAACC,MAAL,EAAV;AACA,UAAM;AAACf,MAAAA;AAAD,QAAS,KAAKD,KAApB;AACAC,IAAAA,IAAI,CAACgB,IAAL,CAAUL,IAAV;AACA,SAAKE,QAAL,CAAc;AACVb,MAAAA;AADU,KAAd;AAGH;;AAEDiB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI,QAAC,QAAD;AACA,QAAA,MAAM,EAAI,KAAKf;AADf;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBACK,KAAKE,GAAL,CAAS,KAAKL,KAAL,CAAWC,IAApB;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAtDsB;;AAyD3B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport AddItems from \"./component/AddItems\";\nimport TodoItems from \"./component/TodoItems\";\n\nclass App extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            info :[\n                {task: \"John\" },\n                {task: \"Adam\" },\n                {task: \"Noah\" },\n            ]\n        }\n        this.adding = this.adding.bind(this)\n        this.adding = this.adding.bind(this)\n    }\n\n    map(matrix){\n        return(\n            matrix.map(\n            (res, id) => <TodoItems\n            key  = {  id        }\n            id   = {  id        }\n            task = {  res.task  }\n            />\n        ))\n    }\n\n    removing(id){\n        const {info} = this.state;\n        let myIndex = info.findIndex(item => item.id === id);\n        info.splice(myIndex,1)\n        this.setState({\n            info\n        })\n    }\n    adding(item){\n        item.id = Math.random()\n        const {info} = this.state;\n        info.push(item)\n        this.setState({\n            info\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <AddItems\n                adding = {this.adding}\n                />\n                <ul>\n                    {this.map(this.state.info)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}